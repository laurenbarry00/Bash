{
	"GeneralDiceRoll": {
		"input":"!dice 3d8",
		"output":"(@)((?:[a-z][a-z]+))(\\s+)(\\d+)(D)(\\d+)(\\s+)(resulted)(\\s+)(in)(\\s+)(\\d+)(\\s+)(\\(.*\\))",
		"expectedResult":"PASS",	
		"actualResult":"PASS"
	},
	"MinNumDiceInside": {
		"input":"!dice 2d4",
		"output":"(@)((?:[a-z][a-z]+))(\\s+)(\\d+)(D)(\\d+)(\\s+)(resulted)(\\s+)(in)(\\s+)(\\d+)(\\s+)(\\(.*\\))",
		"expectedResult":"PASS",
		"actualResult":"PASS"
	},
	"MinNumDiceEdge": {
		"input":"!dice 1d4",
		"output":"(@)((?:[a-z][a-z]+))(\\s+)(\\d+)(D)(\\d+)(\\s+)(resulted)(\\s+)(in)(\\s+)(\\d+)(\\s+)(\\(.*\\))",
		"expectedResult":"PASS",
		"actualResult":"PASS"
	},
	"MaxNumDiceInside": {
		"input":"!dice 35d4",
		"output":"(@)((?:[a-z][a-z]+))(\\s+)(\\d+)(D)(\\d+)(\\s+)(resulted)(\\s+)(in)(\\s+)(\\d+)(\\s+)(\\(.*\\))",
		"expectedResult":"PASS",
		"actualResult":"PASS"
	},
	"MaxNumDiceEdge": {
		"input":"!dice 36d4",
		"output":"^(@)((?:[a-z][a-z]+))(\\s+)(\\d+)(D)(\\d+)(\\s+)(resulted)(\\s+)(in)(\\s+)(\\d+)(\\s+)(\\(.*\\))",
		"expectedResult":"PASS",
		"actualResult":"PASS"
	},
	"MinNumSidesInside": {
		"input":"!dice 2d2",
		"output":"(@)((?:[a-z][a-z]+))(\\s+)(\\d+)(D)(\\d+)(\\s+)(resulted)(\\s+)(in)(\\s+)(\\d+)(\\s+)(\\(.*\\))",
		"expectedResult":"PASS",
		"actualResult":"PASS"
	},
	"MinNumSidesEdge": {
		"input":"!dice 2d1",
		"output":"(@)((?:[a-z][a-z]+))(\\s+)(\\d+)(D)(\\d+)(\\s+)(resulted)(\\s+)(in)(\\s+)(\\d+)(\\s+)(\\(.*\\))",
		"expectedResult":"PASS",
		"actualResult":"PASS"
	},
	"MaxNumSidesInside": {
		"input":"!dice 2d126",
		"output":"^(@)((?:[a-z][a-z]+))(\\s+)(\\d+)(D)(\\d+)(\\s+)(resulted)(\\s+)(in)(\\s+)(\\d+)(\\s+)(\\(.*\\))",
		"expectedResult":"PASS",
		"actualResult":"PASS"
	},
	"MaxNumSidesEdge": {
		"input":"!dice 3d127",
		"output":"^(@)((?:[a-z][a-z]+))(\\s+)(\\d+)(D)(\\d+)(\\s+)(resulted)(\\s+)(in)(\\s+)(\\d+)(\\s+)(\\(.*\\))",
		"expectedResult":"PASS",
		"actualResult":"PASS"
	},
	"StringIllegalParamter": {
		"input":"!dice 5df",
		"output":"^(`\\d+d\\d+`\\sis\\snot\\sa\\svalid\\sdice\\sformat)(,)[a-zA-Z0-9_ ]*$",
		"expectedResult":"PASS",
		"actualResult":"PASS"
	},
	"RobustMaxNumSides": {
		"input":"!dice 3d128",
		"output":"^(`\\d+d\\d+`\\sis\\snot\\sa\\svalid\\sdice\\sformat)(,)[a-zA-Z0-9_ ]*$",
		"expectedResult":"PASS",
		"actualResult":"PASS"
	},
	"RobustMinNumSides": {
		"input":"!dice 3d0",
		"output":"^(`\\d+d\\d+`\\sis\\snot\\sa\\svalid\\sdice\\sformat)(,)[a-zA-Z0-9_ ]*$",
		"expectedResult":"PASS",
		"actualResult":"PASS"
	},
	"RobustMaxNumDice": {
		"input":"!dice 37d4",
		"output":"^(`\\d+d\\d+`\\sis\\snot\\sa\\svalid\\sdice\\sformat)(,)[a-zA-Z0-9_ ]*$",
		"expectedResult":"PASS",
		"actualResult":"PASS"
	},
	"RobustMinNumDice": {
		"input":"!dice 0d3",
		"output":"^(`\\d+d\\d+`\\sis\\snot\\sa\\svalid\\sdice\\sformat)(,)[a-zA-Z0-9_ ]*$",
		"expectedResult":"PASS",
		"actualResult":"PASS"
	},
	"WorstMinDiceMinSidesEdge": {
		"input":"!dice 1d1",
		"output":"^(@)((?:[a-z][a-z]+))(\\s+)(\\d+)(D)(\\d+)(\\s+)(resulted)(\\s+)(in)(\\s+)(\\d+)(\\s+)(\\(.*\\))",
		"expectedResult":"PASS",
		"actualResult":"PASS"
	},
	"WorstMinDiceMinSidesOutside": {
		"input":"!dice 0d0",
		"output":"^(`\\d+d\\d+`\\sis\\snot\\sa\\svalid\\sdice\\sformat)(,)[a-zA-Z0-9_ ]*$",
		"expectedResult":"PASS",
		"actualResult":"PASS"
	},
	"WorstMaxDiceMaxSidesEdge": {
		"input":"!dice 36d127",
		"output":"^(@)((?:[a-z][a-z]+))(\\s+)(\\d+)(D)(\\d+)(\\s+)(resulted)(\\s+)(in)(\\s+)(\\d+)(\\s+)(\\(.*\\))",
		"expectedResult":"PASS",
		"actualResult":"PASS"
	},
	"WorstMaxDiceMaxSidesOutside": {
		"input":"!dice 37d128",
		"output":"^(`\\d+d\\d+`\\sis\\snot\\sa\\svalid\\sdice\\sformat)(,)[a-zA-Z0-9_ ]*$",
		"expectedResult":"PASS",
		"actualResult":"PASS"
	},
	"WorstMaxDiceMinSidesEdge": {
		"input":"!dice 36d1",
		"output":"^(@)((?:[a-z][a-z]+))(\\s+)(\\d+)(D)(\\d+)(\\s+)(resulted)(\\s+)(in)(\\s+)(\\d+)(\\s+)(\\(.*\\))",
		"expectedResult":"PASS",
		"actualResult":"PASS"
	},
	"WorstMaxDiceMinSidesOutisde": {
		"input":"!dice 37d0",
		"output":"^(`\\d+d\\d+`\\sis\\snot\\sa\\svalid\\sdice\\sformat)(,)[a-zA-Z0-9_ ]*$",
		"expectedResult":"PASS",
		"actualResult":"PASS"
	},
	"WorstMinDiceMaxSidesEdge": {
		"input":"!dice 0d127",
		"output":"^(`\\d+d\\d+`\\sis\\snot\\sa\\svalid\\sdice\\sformat)(,)[a-zA-Z0-9_ ]*$",
		"expectedResult":"PASS",
		"actualResult":"PASS"
	},
	"WorstMaxDiceMaxSidesOutside": {
		"input":"!dice 37d128",
		"output":"^(`\\d+d\\d+`\\sis\\snot\\sa\\svalid\\sdice\\sformat)(,)[a-zA-Z0-9_ ]*$",
		"expectedResult":"PASS",
		"actualResult":"PASS"
	}
}